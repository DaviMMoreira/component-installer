{"name":"Component Installer","tagline":"Allows Components to be installed with Composer.","body":"Component Installer for Composer [![Build Status](https://secure.travis-ci.org/RobLoach/component-installer.png?branch=master)](http://travis-ci.org/RobLoach/component-installer)\r\n================================\r\n\r\nAllows installation of Components via [Composer](http://getcomposer.org).\r\n\r\nUsage\r\n-----\r\n\r\nTo install a Component with Composer, add the Component to your *composer.json*\r\n`require` key. The following will install both [jQuery](http://jquery.com) and\r\n[normalize.css](http://necolas.github.io/normalize.css/):\r\n\r\n``` json\r\n{\r\n    \"require\": {\r\n        \"components/jquery\": \"1.9.*\",\r\n        \"components/normalize.css\": \"2.*\"\r\n    }\r\n}\r\n```\r\n\r\n### Using the Component\r\n\r\nThe easiest approach is to use the Component statically. Just reference the\r\nComponents manually using a `script` or `link` tag:\r\n\r\n``` html\r\n<script src=\"components/jquery/jquery.js\"></script>\r\n<link href=\"components/normalize/normalize.css\" rel=\"stylesheet\" type=\"text/css\">\r\n```\r\n\r\nFor complex projects, a [RequireJS](http://requirejs.org) configuration is\r\navailable, which allows autoloading scripts only when needed. A *require.css*\r\nfile is also compiled, including all Component stylesheets:\r\n\r\n``` html\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <link href=\"components/require.css\" rel=\"stylesheet\" type=\"text/css\">\r\n        <script src=\"components/require.js\"></script>\r\n    </head>\r\n    <body>\r\n        <h1>jQuery+RequireJS Component Installer Sample Page</h1>\r\n        <script>\r\n          require(['jquery'], function($) {\r\n            $('body').css('background-color', 'green');\r\n          });\r\n        </script>\r\n    </body>\r\n</html>\r\n```\r\n\r\nConfiguration\r\n-------------\r\n\r\nThere are a number of ways to alter how Components are installed and used.\r\n\r\n### Installation Directory\r\n\r\nIt is posssible to switch where Components are installed by changing the\r\n`component-dir` option in your root *composer.json*'s `config`. The following\r\nwill install jQuery to *public/jquery* rather than *components/jquery*:\r\n\r\n``` json\r\n{\r\n    \"require\": {\r\n        \"components/jquery\": \"*\"\r\n    },\r\n    \"config\": {\r\n        \"component-dir\": \"public\"\r\n    }\r\n}\r\n```\r\n\r\nDefaults to `components`.\r\n\r\n### Base URL\r\n\r\nWhile `component-dir` depicts where the Components will be installed,\r\n`component-baseurl` tells RequireJS the base path that will use when attempting\r\nto load the scripts in the web browser. It is important to make sure the\r\n`component-baseurl` points to the `component-dir` when loaded externally. See\r\nmore about [`baseUrl`](http://requirejs.org/docs/api.html#config-baseUrl) in the\r\nRequireJS documentation.\r\n\r\n``` json\r\n{\r\n    \"require\": {\r\n        \"components/jquery\": \"*\"\r\n    },\r\n    \"config\": {\r\n        \"component-dir\": \"public/assets\",\r\n        \"component-baseurl\": \"/assets\"\r\n    }\r\n}\r\n```\r\n\r\nDefaults to `components`.\r\n\r\nCreating a Component\r\n--------------------\r\n\r\nTo set up a Component to be installed with Component Installer, have it\r\n`require` the package *robloach/component-installer* and set the `type` to\r\n*component*:\r\n\r\n``` json\r\n{\r\n    \"name\": \"components/bootstrap\",\r\n    \"type\": \"component\",\r\n    \"require\": {\r\n        \"robloach/component-installer\": \"*\"\r\n    },\r\n    \"extra\": {\r\n        \"component\": {\r\n            \"scripts\": [\r\n                \"js/bootstrap.js\"\r\n            ],\r\n            \"styles\": [\r\n                \"css/bootstrap.css\"\r\n            ],\r\n            \"files\": [\r\n                \"img/glyphicons-halflings.png\",\r\n                \"img/glyphicons-halflings-white.png\",\r\n                \"js/bootstrap.min.js\",\r\n                \"css/bootstrap.min.css\"\r\n            ]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n* `scripts` - List of all the JavaScript files that will be concatenated\r\ntogether and processed when loading the Component.\r\n* `styles` - List of all the CSS files that should be concatenated together\r\ninto the final *require.css* file.\r\n* `files` - Any additional file assets that should be copied into the Component\r\ndirectory.\r\n\r\n### Component Name\r\n\r\nComponents can provide their own Component name. The following will install\r\njQuery to *components/myownjquery* rather than *components/jquery*:\r\n\r\n``` json\r\n{\r\n    \"name\": \"components/jquery\",\r\n    \"type\": \"component\",\r\n    \"extra\": {\r\n        \"component\": {\r\n            \"name\": \"myownjquery\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nDefaults to the package name, without the vendor.\r\n\r\n### RequireJS Configuration\r\n\r\nComponents can alter how [RequireJS](http://requirejs.org) registers and\r\ninteracts with them by changing some of the [configuration\r\noptions](http://www.requirejs.org/docs/api.html#config):\r\n\r\n``` json\r\n{\r\n    \"name\": \"components/backbone\",\r\n    \"type\": \"component\",\r\n    \"require\": {\r\n        \"components/underscore\": \"*\"\r\n    },\r\n    \"extra\": {\r\n        \"component\": {\r\n            \"shim\": {\r\n                \"deps\": [\"underscore\", \"jquery\"],\r\n                \"exports\": \"Backbone\"\r\n            },\r\n            \"config\": {\r\n                \"color\": \"blue\"\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nCurrent available RequireJS options include:\r\n* [`shim`](http://www.requirejs.org/docs/api.html#config-shim)\r\n* [`config`](http://www.requirejs.org/docs/api.html#config-moduleconfig)\r\n\r\n### Packages Without Composer Support\r\n\r\nUsing [`repositories`](http://getcomposer.org/doc/05-repositories.md#repositories)\r\nin *composer.json* allows use of Component Installer in packages that don't\r\nexplicitly provide their own *composer.json*. In the following example, we\r\ndefine use of [html5shiv](https://github.com/aFarkas/html5shiv):\r\n\r\n``` json\r\n{\r\n    \"require\": {\r\n        \"afarkas/html5shiv\": \"3.6.*\"\r\n    },\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"package\",\r\n            \"package\": {\r\n                \"name\": \"afarkas/html5shiv\",\r\n                \"type\": \"component\",\r\n                \"version\": \"3.6.2\",\r\n                \"dist\": {\r\n                    \"url\": \"https://github.com/aFarkas/html5shiv/archive/3.6.2.zip\",\r\n                    \"type\": \"zip\"\r\n                },\r\n                \"source\": {\r\n                    \"url\": \"https://github.com/aFarkas/html5shiv.git\",\r\n                    \"type\": \"git\",\r\n                    \"reference\": \"3.6.2\"\r\n                },\r\n                \"component\": {\r\n                    \"scripts\": [\r\n                        \"dist/html5shiv.js\"\r\n                    ]\r\n                },\r\n                \"require\": {\r\n                    \"robloach/component-installer\": \"*\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nNot Invented Here\r\n-----------------\r\n\r\nThere are many other amazing projects from which Component Installer was\r\ninspired. It is encouraged to take a look at some of the [other great package\r\nmanagement systems](http://github.com/wilmoore/frontend-packagers):\r\n* [npm](http://npmjs.org)\r\n* [bower](http://twitter.github.com/bower/)\r\n* [component](http://github.com/component/component)\r\n* [Jam](http://jamjs.org)\r\n* [volo](http://volojs.org)\r\n* [Ender](http://ender.jit.su)\r\n* etc\r\n\r\nLicense\r\n-------\r\n\r\nComponent Installer is licensed under the MIT License - see LICENSE.md for\r\ndetails.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}
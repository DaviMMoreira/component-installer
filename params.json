{"name":"Component Installer","tagline":"Allows Components to be installed with Composer.","body":"Component Installer for Composer [![Build Status](https://secure.travis-ci.org/RobLoach/component-installer.png?branch=master)](http://travis-ci.org/RobLoach/component-installer)\r\n================================\r\n\r\nAllows installation of Components via [Composer](http://getcomposer.org).\r\n\r\nUsage\r\n-----\r\n\r\nTo install a Component with Composer, add the Component to your *composer.json*\r\n`require` key. The following will install [jQuery](http://jquery.com), with\r\nComponent Installer, into *components/jquery*:\r\n\r\n``` json\r\n{\r\n    \"require\": {\r\n        \"components/jquery\": \"1.9.*\"\r\n    }\r\n}\r\n```\r\n\r\n### Using the Component\r\n\r\nComponent Installer will build a [RequireJS](http://requirejs.org) configuration\r\nfor you, which allows autoloading the scripts only when required:\r\n\r\n``` html\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <title>jQuery+RequireJS Component Installer Sample</title>\r\n        <script src=\"components/require.js\"></script>\r\n    </head>\r\n    <body>\r\n        <h1>jQuery+RequireJS Component Installer Sample Page</h1>\r\n        <script>\r\n          require(['jquery'], function($) {\r\n            $('body').css('background-color', 'green');\r\n          });\r\n        </script>\r\n    </body>\r\n</html>\r\n```\r\n\r\nIt is still possible to load using normal script tags. In this example, jQuery\r\nwould be at *components/jquery/jquery.js*.\r\n\r\n### Creating a Component\r\n\r\nTo set up a Component to be installed with Component Installer, have it\r\n`require` the package *robloach/component-installer* and set the `type` to\r\n*component*:\r\n\r\n``` json\r\n{\r\n    \"name\": \"components/jquery\",\r\n    \"type\": \"component\",\r\n    \"require\": {\r\n        \"robloach/component-installer\": \"*\"\r\n    },\r\n    \"extra\": {\r\n        \"component\": {\r\n            \"scripts\": [\r\n                \"jquery.js\"\r\n            ]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Installation Directory\r\n\r\nIt is posssible to switch where Components are installed by changing the\r\n`component-dir` option in your root *composer.json*'s `config`. The following\r\nwill install jQuery to *public/jquery* rather than *components/jquery*:\r\n\r\n``` json\r\n{\r\n    \"require\": {\r\n        \"components/jquery\": \"*\"\r\n    },\r\n    \"config\": {\r\n        \"component-dir\": \"public\"\r\n    }\r\n}\r\n```\r\n\r\nDefaults to `components`.\r\n\r\n### Base URL\r\n\r\nWhile `component-dir` depicts where the components will be installed,\r\n`component-baseurl` tells RequireJS the base path that will use when attempting\r\nto load the scripts in the web browser. It is important to make sure the\r\n`component-baseurl` points to the `component-dir` when loaded externally. You\r\ncan read more about [`baseUrl`](http://requirejs.org/docs/api.html#config-baseUrl)\r\nin the RequireJS documentation.\r\n\r\n``` json\r\n{\r\n    \"require\": {\r\n        \"components/jquery\": \"*\"\r\n    },\r\n    \"config\": {\r\n        \"component-dir\": \"public/assets\",\r\n        \"component-baseurl\": \"/assets\"\r\n    }\r\n}\r\n```\r\n\r\nDefaults to `components`.\r\n\r\n### Component Name\r\n\r\nComponents can provide their own component name. The following will install\r\njQuery to *components/myownjquery* rather than *components/jquery*:\r\n\r\n``` json\r\n{\r\n    \"name\": \"components/jquery\",\r\n    \"type\": \"component\",\r\n    \"extra\": {\r\n        \"component\": {\r\n            \"name\": \"myownjquery\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### RequireJS Configuration\r\n\r\nComponents can alter how [RequireJS](http://requirejs.org) registers and\r\ninteracts with them. Currently, only the\r\n[`shim`](http://www.requirejs.org/docs/api.html#config-shim) configuration is\r\navailable, but additional options will become available soon:\r\n\r\n``` json\r\n{\r\n    \"name\": \"components/backbone\",\r\n    \"type\": \"component\",\r\n    \"require\": {\r\n        \"components/underscore\": \"*\"\r\n    },\r\n    \"extra\": {\r\n        \"component\": {\r\n            \"shim\": {\r\n                \"deps\": [\"underscore\", \"jquery\"],\r\n                \"exports\": \"Backbone\"\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nNot Invented Here\r\n-----------------\r\n\r\nThere are many other amazing projects from which Component Installer was\r\ninspired. Many are much more mature than this one. It is encouraged to take a\r\nlook at some of the [other great package management systems](http://github.com/wilmoore/frontend-packagers):\r\n* [npm](http://npmjs.org)\r\n* [bower](http://twitter.github.com/bower/)\r\n* [component](http://github.com/component/component)\r\n* [Jam](http://jamjs.org)\r\n* [volo](http://volojs.org)\r\n* [Ender](http://ender.jit.su)\r\n* etc\r\n\r\nTodo\r\n----\r\n\r\n* More [RequireJS Configurations](http://www.requirejs.org/docs/api.html#config)\r\n* Put together a list of Components that make use of Component Installer\r\n* Compile all the components into one file (`require.min.js`?)\r\n* Determine if `scripts` is named correctly, or if it should just use `main`\r\n* Aggregate all `styles` together into one *require.css*\r\n* Determine if `component-baseurl` is the correct name for it\r\n* Install to `components/[vendor]-[package]` rather than `components/[package]`?\r\n\r\nLicense\r\n-------\r\n\r\nComponent Installer is licensed under the MIT License - see the LICENSE file\r\nfor details.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}